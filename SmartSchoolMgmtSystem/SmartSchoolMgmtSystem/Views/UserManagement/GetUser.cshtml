@model IEnumerable<SmartSchool.Models.DTO.UserDto>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    int sno = 1;
}
<style>
    .required {
    color: red;
    }

    .modal-dialog {
    max-width: 90%;
    width: 90%;
    }

    th {
    font-weight: bold;
    }
</style>

<div class="main-panel">
    <div class="content-wrapper">
        <div class="container-full">
            <div class="col-md-12 mt-3">
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h4 class="card-title mb-0">User Management</h4>
                        <input type="text" id="searchInput" class="form-control" placeholder="Search Classes..." style="width: 300px;" />

                        <button type="button" onclick="openAddModal()" class="btn btn-primary" data-toggle="modal" data-target="#addModal">
                            <i class="fa fa-plus"></i> Add User
                        </button>
                    </div>
                    <div class="card-body">
                        <div class="table-responsive">
                            <table id="example2" class="table table-striped" style="width:100%">
                                <thead>
                                    <tr>
                                        <th>#</th>
                                        <th>Full Name</th>
                                        <th>Email</th>
                                        <th>User Type</th>
                                        <th>Profile Picture</th> <!-- New column -->
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody id="classTableBody">
                                    @foreach (var user in Model)
                                    {
                                        <tr>
                                            <td>@sno</td>
                                            <td>@user.FullName</td>
                                            <td>@user.Email</td>
                                            <td>@user.UserType</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(user.ProfilePicture))
                                                {
                                                    <img src="@Url.Content(user.ProfilePicture)" alt="Profile" style="height: 40px; width: 40px; object-fit: cover; border-radius: 50%;" />
                                                }
                                                else
                                                {
                                                    <span>No Image</span>
                                                }
                                            </td>
                                            <td>
                                                <a href="#" onclick="EditUser('@user.UserId', '@user.FullName', '@user.Email', '@user.UserType', '@user.ProfilePicture')" class="text-primary">
                                                    <button type="button" class="btn btn-circle btn-primary btn-xs">
                                                        <i class="fa fa-edit"></i>
                                                    </button>
                                                </a>
                                                <a href="#" onclick="DeleteUser(@user.UserId)">
                                                    <button type="button" class="btn btn-circle btn-danger btn-xs">
                                                        <i class="fa fa-trash"></i>
                                                    </button>
                                                </a>
                                            </td>
                                        </tr>
                                        sno++;
                                    }
                                </tbody>
                            </table>
                        </div>
                        <!-- Pagination Controls -->
                        <ul id="pagination" class="pagination justify-content-end"></ul>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Modal (Update fields accordingly) -->
<div class="modal fade" id="addModal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-xl custom-modal" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add User</h5>
            </div>
            <div class="modal-body">
                <form id="userForm" action="@Url.Action("AddUser", "UserManagement")" enctype="multipart/form-data" method="post">
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <!-- Full Name -->
                        <div class="col-lg-6">
                            <label>Full Name <span class="required">*</span></label>
                            <input type="text" name="FullName" class="form-control" required />
                        </div>

                        <!-- User Type -->
                        <div class="col-lg-6">
                            <label>User Type <span class="required">*</span></label>
                            <select class="form-control" id="UserType" name="UserType" required>
                                <option value="" selected>--Select--</option>
                                @foreach (var item in ViewBag.UserType)
                                {
                                    <option value="@item">@item</option>
                                }
                            </select>
                        </div>

                        <!-- Email -->
                        <div class="col-lg-6">
                            <label>Email <span class="required">*</span></label>
                            <input type="email" name="Email" class="form-control" required />
                        </div>

                        <!-- Password -->
                        <div class="col-lg-6">
                            <label>Password</label>
                            <input type="password" name="PasswordHash" class="form-control" />
                        </div>

                        <!-- Profile Picture -->
                        <div class="col-md-6 mb-3">
                            <label for="ProfilePicture">Profile Picture</label>
                            <input type="file" class="form-control" id="ProfilePicture" name="ProfilePicture" accept="image/*" onchange="previewProfileImage()" />
                        </div>

                        <!-- Preview -->
                        <div class="col-md-6 mb-3">
                            <label>Preview</label><br />
                            <img id="profilePreview" src="#" alt="No Image Selected" style="max-height: 100px; display: none;" />
                        </div>
                        <div class="col-lg-12 mt-4">
                            <!-- Added margin-top -->
                            <h5 class="mb-3" style="background-color: whitesmoke; color: black; padding: 10px; text-transform: uppercase;">
                                Address
                            </h5>
                        </div>
                        <!-- AddressLine -->
                        <div class="col-lg-6">
                            <label for="Address">Address <span class="required">*</span></label>
                            <input type="text" name="AddressLine" class="form-control" required/>
                        </div>
                        <div class="col-lg-6">
                            <label for="States">State <span class="required">*</span></label>
                            <select class="form-control" id="State" name="State" required>
                                <option value="">--Select--</option>
                                @foreach (var item in ViewBag.State)
                                {
                                    <option value="@item">@item</option>
                                }
                            </select>
                        </div>
                        <div class="col-lg-6">
                            <label for="City">City <span class="required">*</span></label>
                            <select class="form-control" id="City" name="City" required>
                                <option value="">--Select--</option>
                            </select>
                        </div>
                        <div class="col-lg-6">
                            <label for="PinCode">Zipcode <span class="required">*</span></label>
                            <input type="number" class="form-control" name="Pincode" maxlength="6" required />
                        </div>

                    </div>

                    <!-- Modal Footer -->
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">Save</button>
                        <button type="button" class="btn btn-danger" onclick="cancelAndRedirect()">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalLabel">Edit User</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="editUserForm" action="@Url.Action("UpdateUser", "UserManagement")" enctype="multipart/form-data" method="post">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="UserId" id="editUserId" />

                    <div class="row">
                        <div class="col-lg-6">
                            <label>Full Name <span class="required">*</span></label>
                            <input type="text" class="form-control" id="editFullName" name="FullName" required />
                        </div>
                        <div class="col-lg-6">
                            <label>User Type <span class="required">*</span></label>
                            <select class="form-control" id="editUserType" name="UserType" required>
                                <option value="" selected>--Select--</option>
                                @foreach (var item in ViewBag.UserType)
                                {
                                    <option value="@item">@item</option>
                                }
                            </select>
                        </div>
                        <div class="col-lg-6">
                            <label>Email <span class="required">*</span></label>
                            <input type="email" class="form-control" id="editEmail" name="Email" required />
                        </div>
                        
                        <div class="col-lg-6">
                            <label>Password</label>
                            <input type="password" class="form-control" id="editPasswordHash" name="PasswordHash" />
                        </div>
                        <div class="col-lg-6">
                            <label for="editProfilePicture">Profile Picture</label>
                            <input type="file" class="form-control" id="editProfilePicture" name="ProfilePicture" accept="image/*" onchange="previewEditProfileImage()" />
                        </div>
                        <div class="col-lg-6">
                            <label>Preview</label><br />
                            <img id="editProfilePreview" src="#" alt="No Image Selected" style="max-height: 100px; display: none;" />
                        </div>
                        <div class="col-lg-12 mt-4">
                            <!-- Added margin-top -->
                            <h5 class="mb-3" style="background-color: whitesmoke; color: black; padding: 10px; text-transform: uppercase;">
                                Address
                            </h5>
                        </div>
                        <div class="col-lg-6">
                            <label for="editAddress">Address <span class="required">*</span></label>
                            <input type="text" class="form-control" id="editAddress" name="AddressLine" required />
                        </div>
                        <div class="col-lg-6">
                            <label for="editState">State <span class="required">*</span></label>
                            <select class="form-control" id="editState" name="State" required>
                                <option value="">--Select--</option>
                                @foreach (var item in ViewBag.State)
                                {
                                    <option value="@item">@item</option>
                                }
                            </select>
                        </div>
                        <div class="col-lg-6">
                            <label for="editCity">City <span class="required">*</span></label>
                            <select class="form-control" id="editCity" name="City" required>
                                <option value="">--Select--</option>
                                @foreach (var item in ViewBag.city)
                                {
                                    <option value="@item">@item</option>
                                }
                            </select>

                        </div>
                        <div class="col-lg-6">
                            <label for="editPinCode">Zipcode <span class="required">*</span></label>
                            <input type="text" class="form-control" id="editPinCode" name="PinCode" maxlength="6" required />
                        </div>
                    </div>

                    <div class="modal-footer mt-3">
                        <button type="submit" class="btn btn-primary">Update</button>
                        <button type="button" class="btn btn-danger" onclick="cancelAndRedirects()">Cancel</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<script>
     $(document).ready(function () {

        window.openAddModal = function () {
            $('#addModal').modal('show');
        };

    });
    $('#userForm').submit(function (e) {
        e.preventDefault();
        var formData = new FormData(this);

        $.ajax({
            url: '/UserManagement/AddUser',
            type: 'POST',
            data: formData, // ✅ use formData
            processData: false,
            contentType: false,
            success: function (response) {
                if (response.success) {
                    Swal.fire("Success!", "User added successfully.", "success")
                        .then(() => {
                            window.location.reload();
                        });
                } else {
                    Swal.fire("Error!", response.message || "User already exists.", "error");
                }
            },
            error: function () {
                Swal.fire("Error!", "There was an error processing your request.", "error");
            }
        });
    });



    function EditUser(userId, fullName, email, userType, passwordHash, profilePictureUrl) {
        $('#editUserId').val(userId);
        $('#editFullName').val(fullName);
        $('#editEmail').val(email);
        $('#editUserType').val(userType);
        $('#editPasswordHash').val(passwordHash);

        if (profilePictureUrl) {
            $('#editProfilePreview').attr('src', profilePictureUrl).show();
        } else {
            $('#editProfilePreview').hide();
        }

        $('#editUserModal').modal('show');
    }

    $('#editUserForm').submit(function (e) {
        e.preventDefault();
        var formData = new FormData(this);

        $.ajax({
            url: '/UserManagement/UpdateUser',
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                if (response.success) {
                    Swal.fire("Updated!", "User updated successfully.", "success").then(() => {
                        $('#editUserModal').modal('hide');
                        window.location.reload();
                    });
                } else {
                    Swal.fire("Error!", response.message || "Failed to update user.", "error");
                }
            },
            error: function () {
                Swal.fire("Error!", "An error occurred while updating the user.", "error");
            }
        });
    });

        function DeleteUser(userId) {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '/UserManagement/DeleteUser/' + userId,
                    type: 'POST',
                    success: function (response) {
                        if (response.success) {
                            Swal.fire("Deleted!", "User has been deleted.", "success").then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire("Error!", response.message || "There was an issue deleting the User.", "error");
                        }
                    },
                    error: function () {
                        Swal.fire("Error!", "There was an error processing your request.", "error");
                    }
                });
            }
        });
    }


     function previewProfileImage() {
        const fileInput = document.getElementById('ProfilePicture');
        const preview = document.getElementById('profilePreview');

        if (fileInput.files && fileInput.files[0]) {
            const reader = new FileReader();
            reader.onload = function (e) {
                preview.src = e.target.result;
                preview.style.display = 'block';
            };
            reader.readAsDataURL(fileInput.files[0]);
        } else {
            preview.src = '#';
            preview.style.display = 'none';
        }
    }

        function previewEditProfileImage() {
        const fileInput = document.getElementById('editProfilePicture');
        const preview = document.getElementById('editProfilePreview');

        if (fileInput.files && fileInput.files[0]) {
            const reader = new FileReader();
            reader.onload = function (e) {
                preview.src = e.target.result;
                preview.style.display = 'block';
            };
            reader.readAsDataURL(fileInput.files[0]);
        } else {
            preview.src = '#';
            preview.style.display = 'none';
        }
    }

    $('#State').change(function () {
        var selectedState = $(this).val();

        if (selectedState !== "") {
            $.ajax({
                url: '/UserManagement/GetCitiesByState',
                type: 'GET',
                data: { state: selectedState },
                success: function (cities) {
                    console.log("Cities received:", cities); // DEBUG LINE
                    var cityDropdown = $('#City');
                    cityDropdown.empty();
                    cityDropdown.append('<option value="">--Select--</option>');

                    $.each(cities, function (i, city) {
                        cityDropdown.append('<option value="' + city + '">' + city + '</option>');
                    });
                },
                error: function (xhr) {
                    console.log(xhr.responseText); // DEBUG ERROR
                    Swal.fire("Error!", "Could not load cities.", "error");
                }
            });
        }
    });

    $('#editState').change(function () {
        var selectedState = $(this).val();

        if (selectedState !== "") {
            $.ajax({
                url: '/UserManagement/GetCitiesByState',
                type: 'GET',
                data: { state: selectedState },
                success: function (cities) {
                    console.log("Cities received:", cities); // DEBUG LINE
                    var cityDropdown = $('#editCity'); // Updated selector
                    cityDropdown.empty();
                    cityDropdown.append('<option value="">--Select--</option>');

                    $.each(cities, function (i, city) {
                        cityDropdown.append('<option value="' + city + '">' + city + '</option>');
                    });
                },
                error: function (xhr) {
                    console.log(xhr.responseText); // DEBUG ERROR
                    Swal.fire("Error!", "Could not load cities.", "error");
                }
            });
        }
    });

        //search field in table
    $(document).ready(function () {
        $('#searchInput').on('keyup', function () {
            var value = $(this).val().toLowerCase();
            $("#classTableBody tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
            });
        });
    });

      $(document).ready(function () {
        setupPagination('classTableBody', 'pagination');
    });

        //Cancel Button
        function cancelAndRedirect() {
        $('#addModal').modal('hide'); // Hides the modal

        // Wait a bit to allow modal animation to finish before redirecting
        setTimeout(function () {
            window.location.href = '@Url.Action("GetUser", "UserManagement")';
        }, 300); // 300ms matches Bootstrap's fade animation
       }
       function cancelAndRedirects() {
        $('#editUserModal').modal('hide'); // Hides the modal

        // Wait a bit to allow modal animation to finish before redirecting
        setTimeout(function () {
            window.location.href = '@Url.Action("GetUser", "UserManagement")';
        }, 300); // 300ms matches Bootstrap's fade animation
    }
</script>

